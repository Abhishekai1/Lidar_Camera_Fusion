% Auto-generated by cameraCalibrator app on 11-Dec-2024
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_1.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_10.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_11.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_12.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_2.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_3.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_4.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_5.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_6.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_7.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_8.jpg',...
    '/home/ubuntu18/Documents/MATLAB/new_bord/super12_img/camera_image_9.jpg',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
minCornerMetric = 0.150000;
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames, 'MinCornerMetric', minCornerMetric);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 81.000000;  % in millimeters
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
